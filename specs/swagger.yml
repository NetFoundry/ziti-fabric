---
swagger: '2.0'
info:
  version: 0.16.54
  title: Ziti Fabric
  contact: {}
host: demo.ziti.dev
basePath: /fabric/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

#######################################################################################################################
#
# Paths - Endpoints and their associated HTTP methods
#
#######################################################################################################################
paths:
  ###################################################################
  # Services
  ##################################################################
  '/services':
    get:
      summary: List services
      description: |
        Retrieves a list of service resources; supports filtering, sorting, and pagination. Requires admin access.
      tags:
        - Service
      operationId: listServices
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/filter'
      responses:
        '200':
          $ref: '#/responses/listServices'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    post:
      summary: Create a service resource
      description: Create a service resource. Requires admin access.
      tags:
        - Service
      operationId: createService
      parameters:
        - name: service
          in: body
          required: true
          description: A service to create
          schema:
            $ref: '#/definitions/serviceCreate'
      responses:
        '201':
          $ref: '#/responses/createResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
  '/services/{id}':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: Retrieves a single service
      description: Retrieves a single service by id. Requires admin access.
      tags:
        - Service
      operationId: detailService
      responses:
        '200':
          $ref: '#/responses/detailService'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    put:
      summary: Update all fields on a service
      description: Update all fields on a service by id. Requires admin access.
      tags:
        - Service
      operationId: updateService
      parameters:
        - name: service
          in: body
          required: true
          description: A service update object
          schema:
            $ref: '#/definitions/serviceUpdate'
      responses:
        '200':
          $ref: '#/responses/updateResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    patch:
      summary: Update the supplied fields on a service
      description: Update the supplied fields on a service. Requires admin access.
      tags:
        - Service
      operationId: patchService
      parameters:
        - name: service
          in: body
          required: true
          description: A service patch object
          schema:
            $ref: '#/definitions/servicePatch'
      responses:
        '200':
          $ref: '#/responses/patchResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    delete:
      summary: Delete a service
      description: Delete a service by id. Requires admin access.
      tags:
        - Service
      operationId: deleteService
      responses:
        '200':
          $ref: '#/responses/deleteResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '409':
          $ref: '#/responses/cannotDeleteReferencedResourceResponse'

  '/services/{id}/terminators':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: List of terminators assigned to a service
      description: |
        Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.
      tags:
        - Service
      operationId: listServiceTerminators
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/filter'
      responses:
        '200':
          $ref: '#/responses/listTerminators'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '400':
          $ref: '#/responses/badRequestResponse'

  ###################################################################
  # Routers
  ##################################################################
  '/routers':
    get:
      summary: List routers
      description: |
        Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.
      tags:
        - Router
      operationId: listRouters
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/filter'
      responses:
        '200':
          $ref: '#/responses/listRouters'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    post:
      summary: Create a router resource
      description: Create a router resource. Requires admin access.
      tags:
        - Router
      operationId: createRouter
      parameters:
        - name: router
          in: body
          required: true
          description: A router to create
          schema:
            $ref: '#/definitions/routerCreate'
      responses:
        '201':
          $ref: '#/responses/createResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
  '/routers/{id}':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: Retrieves a single router
      description: Retrieves a single router by id. Requires admin access.
      tags:
        - Router
      operationId: detailRouter
      responses:
        '200':
          $ref: '#/responses/detailRouter'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    put:
      summary: Update all fields on a router
      description: Update all fields on a router by id. Requires admin access.
      tags:
        - Router
      operationId: updateRouter
      parameters:
        - name: router
          in: body
          required: true
          description: A router update object
          schema:
            $ref: '#/definitions/routerUpdate'
      responses:
        '200':
          $ref: '#/responses/updateResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    patch:
      summary: Update the supplied fields on a router
      description: Update the supplied fields on a router. Requires admin access.
      tags:
        - Router
      operationId: patchRouter
      parameters:
        - name: router
          in: body
          required: true
          description: A router patch object
          schema:
            $ref: '#/definitions/routerPatch'
      responses:
        '200':
          $ref: '#/responses/patchResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    delete:
      summary: Delete a router
      description: Delete a router by id. Requires admin access.
      tags:
        - Router
      operationId: deleteRouter
      responses:
        '200':
          $ref: '#/responses/deleteResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '409':
          $ref: '#/responses/cannotDeleteReferencedResourceResponse'

  '/routers/{id}/terminators':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: List of terminators assigned to a router
      description: |
        Retrieves a list of terminator resources that are assigned specific router; supports filtering, sorting, and pagination.
      tags:
        - Router
      operationId: listRouterTerminators
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/filter'
      responses:
        '200':
          $ref: '#/responses/listTerminators'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '400':
          $ref: '#/responses/badRequestResponse'

  ###################################################################
  # Terminators
  ##################################################################
  '/terminators':
    get:
      summary: List terminators
      description: |
        Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.
      tags:
        - Terminator
      operationId: listTerminators
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/filter'
      responses:
        '200':
          $ref: '#/responses/listTerminators'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
    post:
      summary: Create a terminator resource
      description: Create a terminator resource. Requires admin access.
      tags:
        - Terminator
      operationId: createTerminator
      parameters:
        - name: terminator
          in: body
          required: true
          description: A terminator to create
          schema:
            $ref: '#/definitions/terminatorCreate'
      responses:
        '201':
          $ref: '#/responses/createResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
  '/terminators/{id}':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: Retrieves a single terminator
      description: Retrieves a single terminator by id. Requires admin access.
      tags:
        - Terminator
      operationId: detailTerminator
      responses:
        '200':
          $ref: '#/responses/detailTerminator'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    put:
      summary: Update all fields on a terminator
      description: Update all fields on a terminator by id. Requires admin access.
      tags:
        - Terminator
      operationId: updateTerminator
      parameters:
        - name: terminator
          in: body
          required: true
          description: A terminator update object
          schema:
            $ref: '#/definitions/terminatorUpdate'
      responses:
        '200':
          $ref: '#/responses/updateResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    patch:
      summary: Update the supplied fields on a terminator
      description: Update the supplied fields on a terminator. Requires admin access.
      tags:
        - Terminator
      operationId: patchTerminator
      parameters:
        - name: terminator
          in: body
          required: true
          description: A terminator patch object
          schema:
            $ref: '#/definitions/terminatorPatch'
      responses:
        '200':
          $ref: '#/responses/patchResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    delete:
      summary: Delete a terminator
      description: Delete a terminator by id. Requires admin access.
      tags:
        - Terminator
      operationId: deleteTerminator
      responses:
        '200':
          $ref: '#/responses/deleteResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '409':
          $ref: '#/responses/cannotDeleteReferencedResourceResponse'

  ###################################################################
  # Links
  ##################################################################
  '/links':
    get:
      summary: List links
      description: |
        Retrieves a list of link resources; does not supports filtering, sorting, or pagination. Requires admin access.
      tags:
        - Link
      operationId: listLinks
      responses:
        '200':
          $ref: '#/responses/listLinks'
        '401':
          $ref: '#/responses/unauthorizedResponse'
  '/links/{id}':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: Retrieves a single link
      description: Retrieves a single link by id. Requires admin access.
      tags:
        - Link
      operationId: detailLink
      responses:
        '200':
          $ref: '#/responses/detailLink'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    patch:
      summary: Update the supplied fields on a link
      description: Update the supplied fields on a link. Requires admin access.
      tags:
        - Link
      operationId: patchLink
      parameters:
        - name: link
          in: body
          required: true
          description: A link patch object
          schema:
            $ref: '#/definitions/linkPatch'
      responses:
        '200':
          $ref: '#/responses/patchResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'

  ###################################################################
  # Circuits
  ##################################################################
  '/circuits':
    get:
      summary: List circuits
      description: |
        Retrieves a list of circuit resources; does not supports filtering, sorting, or pagination. Requires admin access.
      tags:
        - Circuit
      operationId: listCircuits
      responses:
        '200':
          $ref: '#/responses/listCircuits'
        '401':
          $ref: '#/responses/unauthorizedResponse'
  '/circuits/{id}':
    parameters:
      - $ref: '#/parameters/id'
    get:
      summary: Retrieves a single circuit
      description: Retrieves a single circuit by id. Requires admin access.
      tags:
        - Circuit
      operationId: detailCircuit
      responses:
        '200':
          $ref: '#/responses/detailCircuit'
        '404':
          $ref: '#/responses/notFoundResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
    delete:
      summary: Delete a circuit
      description: Delete a circuit by id. Requires admin access.
      tags:
        - Circuit
      operationId: deleteCircuit
      parameters:
        - name: options
          in: body
          required: false
          description: A circuit delete object
          schema:
            $ref: '#/definitions/circuitDelete'
      responses:
        '200':
          $ref: '#/responses/deleteResponse'
        '400':
          $ref: '#/responses/badRequestResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'
        '409':
          $ref: '#/responses/cannotDeleteReferencedResourceResponse'

  ###################################################################
  # Inspections
  ##################################################################
  '/inspections':
    post:
      summary: Inspect system values
      description: |
        Requests system information, such as stack dumps or information about capabilities. Requires admin access.
      tags:
        - Inspect
      operationId: inspect
      parameters:
        - name: request
          in: body
          required: true
          description: An inspect request
          schema:
            $ref: '#/definitions/inspectRequest'
      responses:
        '200':
          $ref: '#/responses/inspectResponse'
        '401':
          $ref: '#/responses/unauthorizedResponse'

#######################################################################################################################
#
# Parameters - Reusable parameters
#
#######################################################################################################################
parameters:
  id:
    name: id
    required: true
    type: string
    in: path
    description: The id of the requested resource
  limit:
    name: limit
    type: integer
    in: query
  offset:
    name: offset
    type: integer
    in: query
  filter:
    name: filter
    type: string
    in: query

#######################################################################################################################
#
# Responses - Envelope Wrapped Definitions
#
#######################################################################################################################
responses:
  ###################################################################
  # Errors
  ##################################################################
  badRequestResponse:
    description: The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
    schema:
      $ref: '#/definitions/apiErrorEnvelope'
    examples:
      'application/json':
        error:
          args:
            urlVars: {}
          cause:
            field: '(root)'
            type: required
            value:
              fooField: abc
              fooField2: def
            message: '(root): fooField3 is required'
            details:
              context: '(root)'
              field: '(root)'
              property: fooField3
          causeMessage: schema validation failed
          code: COULD_NOT_VALIDATE
          message: The supplied request contains an invalid document
          requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
        meta:
          apiEnrollmentVersion: 0.0.1
          apiVersion: 0.0.1
  unauthorizedResponse:
    description: The currently supplied session does not have the correct access rights to request this resource
    schema:
      $ref: '#/definitions/apiErrorEnvelope'
    examples:
      'application/json':
        error:
          args:
            urlVars: {}
          cause: ''
          causeMessage: ''
          code: UNAUTHORIZED
          message: The request could not be completed. The session is not authorized or the
            credentials are invalid
          requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
        meta:
          apiEnrollmentVersion: 0.0.1
          apiVersion: 0.0.1
  invalidAuthResponse:
    description: The authentication request could not be processed as the credentials are invalid
    schema:
      $ref: '#/definitions/apiErrorEnvelope'
    examples:
      'application/json':
        error:
          args:
            urlVars: {}
          cause: ''
          causeMessage: ''
          code: INVALID_AUTH
          message: The authentication request failed
          requestId: 5952ed10-3091-474f-a691-47ebab6990dc
        meta:
          apiEnrollmentVersion: 0.0.1
          apiVersion: 0.0.1
  notFoundResponse:
    description: The requested resource does not exist
    schema:
      $ref: '#/definitions/apiErrorEnvelope'
    examples:
      'application/json':
        error:
          args:
            urlVars:
              id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
          cause:
          causeMessage: ''
          code: NOT_FOUND
          message: The resource requested was not found or is no longer available
          requestId: 270908d6-f2ef-4577-b973-67bec18ae376
        meta:
          apiEnrollmentVersion: 0.0.1
          apiVersion: 0.0.1
  cannotDeleteReferencedResourceResponse:
    description: The resource requested to be removed/altered cannot be as it is referenced by another object.
    schema:
      $ref: '#/definitions/apiErrorEnvelope'
    examples:
      'application/json':
        error:
          args:
            urlVars:
              id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
          causeMessage: 'referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42'
          code: CONFLICT_CANNOT_MODIFY_REFERENCED
          message: The resource cannot be deleted/modified. Remove all referencing resources first.
          requestId: 270908d6-f2ef-4577-b973-67bec18ae376
        meta:
          apiEnrollmentVersion: 0.0.1
          apiVersion: 0.0.1
  rateLimitedResponse:
    description: The resource requested is rate limited and the rate limit has been exceeded
    schema:
      $ref: '#/definitions/apiErrorEnvelope'
    examples:
      'application/json':
        error:
          args:
            urlVars: {}
          causeMessage: 'you have hit a rate limit in the requested operation'
          code: RATE_LIMITED
          message: The resource is rate limited and the rate limit has been exceeded. Please try again later
          requestId: 270908d6-f2ef-4577-b973-67bec18ae376
        meta:
          apiEnrollmentVersion: 0.0.1
          apiVersion: 0.0.1

  ###################################################################
  # Standard Responses
  ##################################################################
  emptyResponse:
    description: Base empty response
    schema:
      $ref: '#/definitions/empty'
  deleteResponse:
    description: The delete request was successful and the resource has been removed
    schema:
      $ref: '#/definitions/empty'
  updateResponse:
    description: The update request was successful and the resource has been altered
    schema:
      $ref: '#/definitions/empty'
  patchResponse:
    description: The patch request was successful and the resource has been altered
    schema:
      $ref: '#/definitions/empty'
  createResponse:
    description: The create request was successful and the resource has been added at the following location
    schema:
      $ref: '#/definitions/createEnvelope'

  ###################################################################
  # Services
  ##################################################################
  listServices:
    description: A list of services
    schema:
      $ref: '#/definitions/listServicesEnvelope'
  detailService:
    description: A single service
    schema:
      $ref: '#/definitions/detailServiceEnvelope'

  ###################################################################
  # Routers
  ##################################################################
  listRouters:
    description: A list of routers
    schema:
      $ref: '#/definitions/listRoutersEnvelope'
  detailRouter:
    description: A single router
    schema:
      $ref: '#/definitions/detailRouterEnvelope'

  ###################################################################
  # Terminators
  ##################################################################
  listTerminators:
    description: A list of terminators
    schema:
      $ref: '#/definitions/listTerminatorsEnvelope'
  detailTerminator:
    description: A single terminator
    schema:
      $ref: '#/definitions/detailTerminatorEnvelope'

  ###################################################################
  # Links
  ##################################################################
  listLinks:
    description: A list of links
    schema:
      $ref: '#/definitions/listLinksEnvelope'
  detailLink:
    description: A single link
    schema:
      $ref: '#/definitions/detailLinkEnvelope'

  ###################################################################
  # Circuits
  ###################################################################
  listCircuits:
    description: A list of circuits
    schema:
      $ref: '#/definitions/listCircuitsEnvelope'
  detailCircuit:
    description: A single circuit
    schema:
      $ref: '#/definitions/detailCircuitEnvelope'

  ###################################################################
  # Inspections
  ###################################################################
  inspectResponse:
    description: A response to an inspect request
    schema:
      $ref: '#/definitions/inspectResponse'

#######################################################################################################################
#
# Definitions - In & Out Models Only
#
#######################################################################################################################
definitions:
  ###################################################################
  # Standard
  ##################################################################
  pagination:
    type: object
    required:
      - limit
      - offset
      - totalCount
    properties:
      limit:
        type: number
        format: int64
      offset:
        type: number
        format: int64
      totalCount:
        type: number
        format: int64

  empty:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        type: object
        example: {}
  meta:
    type: object
    properties:
      filterableFields:
        type: array
        items:
          type: string
        x-omitempty: true
      pagination:
        $ref: '#/definitions/pagination'
      apiEnrollmentVersion:
        type: string
      apiVersion:
        type: string
  createEnvelope:
    type: object
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/createLocation'
  createLocation:
    type: object
    properties:
      _links:
        $ref: '#/definitions/links'
      id:
        type: string

  baseEntity:
    description: Fields shared by all Edge API entities
    type: object
    required:
      - id
      - createdAt
      - updatedAt
      - _links
      - tags
    properties:
      id:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      _links:
        $ref: '#/definitions/links'
      tags:
        $ref: '#/definitions/tags'
  link:
    description: A link to another resource
    type: object
    required:
      - href
    properties:
      href:
        type: string
        format: uri
      method:
        type: string
      comment:
        type: string
  links:
    description: A map of named links
    type: object
    x-omitempty: false
    additionalProperties:
      $ref: '#/definitions/link'
  entityRef:
    description: A reference to another resource and links to interact with it
    type: object
    properties:
      entity:
        type: string
      id:
        type: string
      name:
        type: string
      _links:
        $ref: '#/definitions/links'
  tags:
    description: 'A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean'
    allOf:
      - $ref: '#/definitions/subTags'
    x-nullable: true
  subTags:
    type: object
    additionalProperties: {
      type: object
    }

  versionInfo:
    description: 'Application build information'
    type: object
    properties:
      version:
        type: string
      revision:
        type: string
      buildDate:
        type: string
      os:
        type: string
      arch:
        type: string

  ###################################################################
  # Errors
  ##################################################################
  apiErrorEnvelope:
    type: object
    required:
      - meta
      - error
    properties:
      meta:
        $ref: '#/definitions/meta'
      error:
        $ref: '#/definitions/apiError'
  apiError:
    type: object
    properties:
      args:
        $ref: '#/definitions/apiErrorArgs'
      data:
        type: object
        additionalProperties: true
      causeMessage:
        type: string
      code:
        type: string
      message:
        type: string
      requestId:
        type: string
      cause:
        $ref: '#/definitions/apiErrorCause'
  apiFieldError:
    type: object
    properties:
      reason:
        type: string
      field:
        type: string
      value:
        type: string
  apiErrorCause:
    allOf:
      - $ref: '#/definitions/apiFieldError'
      - $ref: '#/definitions/apiError'
  apiErrorArgs:
    type: object
    properties:
      urlVars:
        properties: {}
        additionalProperties:
          type: string
        type: object

  ###################################################################
  # Services
  ##################################################################
  listServicesEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/serviceList'
  detailServiceEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/serviceDetail'

  serviceList:
    type: array
    items:
      $ref: '#/definitions/serviceDetail'
  serviceDetail:
    type: object
    allOf:
      - $ref: '#/definitions/baseEntity'
      - type: object
        required:
          - name
          - terminatorStrategy
        properties:
          name:
            type: string
          terminatorStrategy:
            type: string
  serviceCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      terminatorStrategy:
        type: string
      tags:
        $ref: '#/definitions/tags'
  serviceUpdate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      terminatorStrategy:
        type: string
      tags:
        $ref: '#/definitions/tags'
  servicePatch:
    type: object
    properties:
      name:
        type: string
      terminatorStrategy:
        type: string
      tags:
        $ref: '#/definitions/tags'

  ###################################################################
  # Routers
  ##################################################################
  listRoutersEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/routerList'
  detailRouterEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/routerDetail'

  routerList:
    type: array
    items:
      $ref: '#/definitions/routerDetail'
  routerDetail:
    type: object
    allOf:
      - $ref: '#/definitions/baseEntity'
      - type: object
        required:
          - name
          - fingerprint
          - connected
          - cost
          - noTraversal
        properties:
          name:
            type: string
          fingerprint:
            type: string
          connected:
            type: boolean
          cost:
            type: integer
            minimum: 0
            maximum: 65535
          noTraversal:
            type: boolean
          listenerAddresses:
            type: array
            items:
              $ref: '#/definitions/routerListener'
          versionInfo:
            $ref: '#/definitions/versionInfo'
  routerListener:
    type: object
    required:
      - address
      - type
    properties:
      address:
        type: string
      type:
        type: string
  routerCreate:
    type: object
    required:
      - id
      - name
      - cost
      - noTraversal
    properties:
      id:
        type: string
      name:
        type: string
      fingerprint:
        type: string
        x-nullable: true
      cost:
        type: integer
        minimum: 0
        maximum: 65535
      noTraversal:
        type: boolean
      tags:
        $ref: '#/definitions/tags'
  routerUpdate:
    type: object
    required:
      - name
      - fingerprint
      - cost
      - noTraversal
    properties:
      name:
        type: string
      fingerprint:
        type: string
      cost:
        type: integer
        minimum: 0
        maximum: 65535
      noTraversal:
        type: boolean
      tags:
        $ref: '#/definitions/tags'
  routerPatch:
    type: object
    properties:
      name:
        type: string
      fingerprint:
        type: string
        x-nullable: true
      cost:
        type: integer
        minimum: 0
        maximum: 65535
        x-nullable: true
      noTraversal:
        type: boolean
        x-nullable: true
      tags:
        $ref: '#/definitions/tags'

  ###################################################################
  # Terminators
  ##################################################################
  listTerminatorsEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/terminatorList'
  detailTerminatorEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/terminatorDetail'
  terminatorList:
    type: array
    items:
      $ref: '#/definitions/terminatorDetail'
  terminatorDetail:
    type: object
    allOf:
      - $ref: '#/definitions/baseEntity'
      - type: object
        required:
          - serviceId
          - service
          - routerId
          - router
          - binding
          - address
          - identity
          - cost
          - precedence
          - dynamicCost
        properties:
          serviceId:
            type: string
          service:
            $ref: '#/definitions/entityRef'
          routerId:
            type: string
          router:
            $ref: '#/definitions/entityRef'
          binding:
            type: string
          address:
            type: string
          identity:
            type: string
          cost:
            $ref: '#/definitions/terminatorCost'
          precedence:
            $ref: '#/definitions/terminatorPrecedence'
          dynamicCost:
            $ref: '#/definitions/terminatorCost'
  terminatorCreate:
    type: object
    required:
      - service
      - router
      - address
      - binding
    properties:
      service:
        type: string
      router:
        type: string
      binding:
        type: string
      address:
        type: string
      identity:
        type: string
      identitySecret:
        type: string
        format: byte
      cost:
        $ref: '#/definitions/terminatorCost'
      precedence:
        $ref: '#/definitions/terminatorPrecedence'
      tags:
        $ref: '#/definitions/tags'
  terminatorUpdate:
    type: object
    required:
      - service
      - router
      - address
      - binding
    properties:
      service:
        type: string
      router:
        type: string
      binding:
        type: string
      address:
        type: string
      cost:
        $ref: '#/definitions/terminatorCost'
      precedence:
        $ref: '#/definitions/terminatorPrecedence'
      tags:
        $ref: '#/definitions/tags'
  terminatorPatch:
    type: object
    properties:
      service:
        type: string
      router:
        type: string
      binding:
        type: string
      address:
        type: string
      cost:
        $ref: '#/definitions/terminatorCost'
      precedence:
        $ref: '#/definitions/terminatorPrecedence'
      tags:
        $ref: '#/definitions/tags'

  terminatorCost:
    type: integer
    minimum: 0
    maximum: 65535
  terminatorPrecedence:
    type: string
    enum:
      - default
      - required
      - failed
  terminatorPrecedenceMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/terminatorPrecedence'
  terminatorCostMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/terminatorCost'

  ###################################################################
  # Links
  ##################################################################
  listLinksEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/linkList'
  detailLinkEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/linkDetail'
  linkList:
    type: array
    items:
      $ref: '#/definitions/linkDetail'
  linkDetail:
    type: object
    required:
      - id
      - type
      - sourceRouter
      - destRouter
      - state
      - staticCost
      - sourceLatency
      - destLatency
      - cost
      - down
    properties:
      id:
        type: string
      type:
        type: string
      sourceRouter:
        $ref: '#/definitions/entityRef'
      destRouter:
        $ref: '#/definitions/entityRef'
      state:
        type: string
      down:
        type: boolean
      staticCost:
        type: integer
      sourceLatency:
        type: integer
      destLatency:
        type: integer
      cost:
        type: integer
  linkPatch:
    type: object
    properties:
      down:
        type: boolean
      staticCost:
        type: integer

  ###################################################################
  # Circuits
  ##################################################################
  listCircuitsEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/linkList'
  detailCircuitEnvelope:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        $ref: '#/definitions/circuitDetail'
  circuitList:
    type: array
    items:
      $ref: '#/definitions/circuitDetail'
  circuitDetail:
    type: object
    required:
      - id
      - service
      - terminator
      - path
    properties:
      id:
        type: string
      clientId:
        type: string
      service:
        $ref: '#/definitions/entityRef'
      terminator:
        $ref: '#/definitions/entityRef'
      path:
        type: object
        properties:
          nodes:
            type: array
            items:
              $ref: '#/definitions/entityRef'
          links:
            type: array
            items:
              $ref: '#/definitions/entityRef'
  circuitDelete:
    type: object
    properties:
      immediate:
        type: boolean

  ###################################################################
  # Inspections
  ##################################################################
  inspectRequest:
    type: object
    required:
      - appRegex
      - requestedValues
    properties:
      appRegex:
        type: string
      requestedValues:
        type: array
        items:
          type: string
  inspectResponseValue:
    type: object
    required:
      - appId
      - name
      - value
    properties:
      appId:
        type: string
      name:
        type: string
      value:
        type:
          - object
          - string
          - number
          - boolean
  inspectResponse:
    type: object
    required:
      - success
    properties:
      success:
        type: boolean
      errors:
        type: array
        items:
          type: string
      values:
        type: array
        items:
          $ref: '#/definitions/inspectResponseValue'





